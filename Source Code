import tkinter as tk
from tkinter import colorchooser

class PaintApp(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Paint App")
        self.geometry("800x600")

        # Create drawing canvas
        self.canvas = tk.Canvas(self, bg="white", width=800, height=500)
        self.canvas.pack(fill=tk.BOTH, expand=True)

        # Set up initial drawing parameters
        self.current_color = "black"
        self.current_brush_size = 2
        self.is_drawing = False

        # Create toolbar
        self.create_toolbar()

        # Bind canvas events
        self.canvas.bind("<B1-Motion>", self.on_paint)
        self.canvas.bind("<Button-1>", self.on_click)
        self.canvas.bind("<ButtonRelease-1>", self.on_release)

    def create_toolbar(self):
        # Brush color button
        color_button = tk.Button(self, text="Brush Color", command=self.choose_color)
        color_button.pack(side=tk.LEFT, padx=5, pady=5)

        # Brush size scale
        size_label = tk.Label(self, text="Brush Size")
        size_label.pack(side=tk.LEFT, padx=5, pady=5)
        self.size_scale = tk.Scale(self, from_=1, to=20, orient=tk.HORIZONTAL)
        self.size_scale.set(self.current_brush_size)
        self.size_scale.pack(side=tk.LEFT, padx=5, pady=5)

        # Clear canvas button
        clear_button = tk.Button(self, text="Clear Canvas", command=self.clear_canvas)
        clear_button.pack(side=tk.RIGHT, padx=5, pady=5)

    def choose_color(self):
        color = colorchooser.askcolor(initialcolor=self.current_color)
        if color[1]:
            self.current_color = color[1]

    def on_click(self, event):
        self.is_drawing = True

    def on_paint(self, event):
        if self.is_drawing:
            x1, y1 = (event.x - self.current_brush_size), (event.y - self.current_brush_size)
            x2, y2 = (event.x + self.current_brush_size), (event.y + self.current_brush_size)
            self.canvas.create_oval(x1, y1, x2, y2, fill=self.current_color, outline="")

    def on_release(self, event):
        self.is_drawing = False

    def clear_canvas(self):
        self.canvas.delete("all")

if __name__ == "__main__":
    app = PaintApp()
    app.mainloop()
